---
import { industries } from '../data/industries';

export interface Props {
  lang: 'ar' | 'en';
}

const { lang } = Astro.props;

// Define the getIcon function
function getIcon(iconName: string): string {
  const icons: Record<string, string> = {
    construction: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>',
    manufacturing: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"></path>',
    retail: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>',
    healthcare: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>',
    education: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>',
    finance: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>',
    logistics: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z"></path>',
    hospitality: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>',
    technology: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>',
    agriculture: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>',
    services: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>',
    default: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>'
  };
  
  return icons[iconName] || icons.default;
}

const content = {
  ar: {
    title: 'الصناعات التي نخدمها',
    subtitle: 'خبرة متخصصة في قطاعات متنوعة مع حلول اودو ERP',
    description: 'نقدم حلول اودو ERP المخصصة للصناعات المختلفة في المملكة العربية السعودية مع فهم عميق لاحتياجات كل قطاع.',
    viewAll: 'عرض جميع الصناعات',
    cta: {
      title: 'لا ترى صناعتك؟',
      description: 'نحن نعمل مع جميع انواع الاعمال. تحدث معنا حول احتياجاتك الخاصة من اودو ERP.',
      button: 'تواصل معنا'
    }
  },
  en: {
    title: 'Industries We Serve',
    subtitle: 'Specialized expertise across diverse sectors with Odoo ERP solutions',
    description: 'We provide customized Odoo ERP solutions for different industries in Saudi Arabia with deep understanding of each sector\'s needs.',
    viewAll: 'View All Industries',
    cta: {
      title: "Don't see your industry?",
      description: 'We work with all types of businesses. Talk to us about your specific Odoo ERP needs.',
      button: 'Contact Us'
    }
  }
};

const t = content[lang];
const industriesPath = lang === 'ar' ? '/industries' : '/en/industries';

// Get the top 4 industries for the homepage preview
const topIndustries = industries.slice(0, 4);
---

<section id="industries" class="py-20 bg-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl lg:text-5xl font-bold text-dark-900 mb-4">
        {t.title}
      </h2>
      <p class="text-xl text-odoo-purple font-medium mb-4">
        {t.subtitle}
      </p>
      <p class="text-lg text-dark-600 max-w-4xl mx-auto leading-relaxed">
        {t.description}
      </p>
    </div>

    <!-- Industries Grid -->
    <div class="grid md:grid-cols-2 xl:grid-cols-4 gap-8 mb-12">
      {topIndustries.map((industry, index) => (
        <div class="bg-gradient-to-br from-gray-50 to-odoo-accent/10 rounded-xl p-6 hover:shadow-xl transition-all duration-300 border border-gray-100 group">
          <div class={`w-16 h-16 rounded-xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-200 ${
            index === 0 ? 'bg-orange-100' :
            index === 1 ? 'bg-blue-100' :
            index === 2 ? 'bg-green-100' : 'bg-purple-100'
          }`}>
            <svg class={`w-8 h-8 ${
              index === 0 ? 'text-orange-600' :
              index === 1 ? 'text-blue-600' :
              index === 2 ? 'text-green-600' : 'text-purple-600'
            }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <Fragment set:html={getIcon(industry.icon)} />
            </svg>
          </div>
          
          <h3 class="text-xl font-bold text-dark-900 mb-3">
            <a href={`${industriesPath}/${industry.slug}`} class="hover:text-odoo-purple transition-colors duration-200">
              {lang === 'ar' ? industry.ar.name : industry.en.name}
            </a>
          </h3>
          
          <p class="text-dark-600 mb-4 leading-relaxed text-sm">
            {lang === 'ar' ? industry.ar.shortDescription : industry.en.shortDescription}
          </p>
          
          <ul class="space-y-2">
            {(lang === 'ar' ? industry.ar.features : industry.en.features).map((feature) => (
              <li class="flex items-center space-x-2 rtl:space-x-reverse">
                <div class="w-4 h-4 bg-odoo-accent/20 rounded-full flex items-center justify-center flex-shrink-0">
                  <svg class="w-2 h-2 text-odoo-purple" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7"></path>
                  </svg>
                </div>
                <span class="text-dark-700 text-sm font-medium">{feature}</span>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>

    <!-- View All Industries Link -->
    <div class="text-center mb-8">
      <a href={industriesPath} class="inline-flex items-center text-odoo-purple hover:text-purple-800 font-medium transition-colors duration-200 bg-white px-6 py-3 rounded-lg shadow-md hover:shadow-lg">
        {t.viewAll}
        <svg class={`w-4 h-4 ml-2 rtl:ml-0 rtl:mr-2 ${lang === 'ar' ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>

    <!-- Bottom CTA -->
    <div class="text-center bg-gradient-to-r from-odoo-purple to-purple-800 rounded-2xl p-8 text-white">
      <h3 class="text-2xl font-bold mb-4">
        {t.cta.title}
      </h3>
      <p class="text-xl mb-6 text-purple-100">
        {t.cta.description}
      </p>
      <a 
        href={lang === 'ar' ? '/contact' : '/en/contact'}
        class="inline-flex items-center bg-white text-odoo-purple px-8 py-3 rounded-lg font-semibold hover:bg-gray-50 transition-all duration-200 shadow-lg"
      >
        {t.cta.button}
        <svg class={`w-5 h-5 ml-2 rtl:ml-0 rtl:mr-2 ${lang === 'ar' ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>